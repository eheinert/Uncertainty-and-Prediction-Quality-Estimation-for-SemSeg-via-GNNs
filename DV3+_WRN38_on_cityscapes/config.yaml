
####################################################################################################
#### MetaSeg settings ##############################################################################
####################################################################################################
# dataset: name of dataset, key in 'data specific settings'
# semseg_model: name of semseg architecture, key in 'semantic segmentation settings' 
# meta_target: choose from {iou, iou0}
# meta_model: type of MetaSeg model, choose from {logistic, gradient_boosting_classifier} for iou0
#                                            and {linear, gradient_boosting_regressor} for iou
# val_multiparam: 0 : no validation,     
#                 0 < val_multiparam < 1 : portion of meta_train data used for training
#                 =1 : assumes explicit meta_val set in cfg[dataset].splits (i.e. dataset settings)
#                 >= 2 : Kfold cross validation, then fitting on complete meta_train data
# infer_blend: choose from [0,1] with 0 = solely prediction, 1 solely original image
# metaseg_data: path to meta metrics (computed from softmax probabilities generated by semseg model)
# plots: path to graphic representations of IoU predictions, i.e. meta inference
# meta_model: directory to save meta model in
####################################################################################################

dataset: cityscapes
semseg_model: DeepLabWV3+
meta_target: iou
meta_model: linear
val_multiparam: 5
seed: 42
infer_blend: 0.6
save_roots:
  metaseg_data: DV3+_WRN38_on_cityscapes/meta_data/meta_metrics/
  meta_inference: DV3+_WRN38_on_cityscapes/meta_data/inference/
  meta_model: DV3+_WRN38_on_cityscapes/runs/
  stats_and_plots: DV3+_WRN38_on_cityscapes/runs/


#################################################################################################
#### dataset specific settings / collection of dataset cfgs #####################################
#################################################################################################
# _target_: path to dataset class
# Furthermore all the parameters needed to set up the dataloader, for cityscapes:
#   probs_root: path to softmax preds of semseg model, base for computation of meta metrics
#   target_root: path to semseg ground truth, used to compute meta labels
#   images_root: path to input data of non meta model
#   mode: always one of the splits, used to set cfg to either training or inference mode.
#   splits: subfolders used for training/inference purposes.
#################################################################################################

cityscapes:
  _target_: metaseg.datasets.cityscapes.Cityscapes
  images_root: DV3+_WRN38_on_cityscapes/cityscapes/leftImg8bit
  target_root: DV3+_WRN38_on_cityscapes/cityscapes/gtFine
  probs_root: DV3+_WRN38_on_cityscapes/cityscapes/softmax_probs
  mode: meta_train
  splits:
    meta_train: val
    meta_infer: test



#################################################################################################
#### semantic segmentation settings / collection of semseg cfgs #################################
#################################################################################################
# checkpoint: path to semseg checkpoint/weights
# loader: path to function that initializes the segmentation network
# model._target_: path to your model class
# Furthermore all parameters needed to initalize the specific semseg model:
#################################################################################################

DeepLabWV3+:
  checkpoint: DV3+_WRN38_on_cityscapes/DeepLabV3+_WideResNet38_cityscapes.pth
  loader: semseg_models.model_loaders.init_deeplabwv3_plus
  model:
    _target_: semseg_models.deepv3.DeepWV3Plus
    num_classes: 19


#################################################################################################
#### meta model specific settings / collection of implemented meta models #######################
#################################################################################################
# implementations in metaseg/models.py, for further details see sklearn documentations. #########
#################################################################################################

logistic:
  _target_: metaseg.models.logistic_regressor
  random_state: 0
  solver: saga
  max_iter: 1000
  tol: 1e-3

linear:
  _target_: metaseg.models.linear_regressor

gradient_boosting_classifier:
  _target_: metaseg.models.gradient_boosting_classfier
  random_state: 0
  n_estimators: 100
  min_samples_split: 2
  min_samples_leaf: 1
  max_depth: 3

gradient_boosting_regressor:
  _target_: metaseg.models.gradient_boosting_regressor
  random_state: 0
  n_estimators: 100
  min_samples_split: 2
  min_samples_leaf: 1
  max_depth: 3

##################################################################################################
#### multiprocessing settings ####################################################################
##################################################################################################

worker:
  parallel: True
  num_cpus: 5
  chunksize: 1


##################################################################################################
#### hydra settings                                       ########################################
#### uncomment all the following to fully disable logging ########################################
##################################################################################################

defaults:
  - _self_
  - override hydra/hydra_logging: disabled
  - override hydra/job_logging: disabled
hydra:
  output_subdir: null
  run:
    dir: .